<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AE+47wBMte4ASbLtAEav7ABDrOsAQKnqAD6m6Rs7o+gAOKDoADWe5wAym+YAMJjlAC2V
        5AAqkuMAKJDiACWN4gAiiuEAIIjgAB6F3wAbg94AGYHeABd+3QAVfNwAE3rcABF42wAPdtsbDXTaAAtz
        2QAKcdkACXDZAAdu2AAHbtgAUbrvAE637gBLtO4ASLHtAEau7ABDq+sAQKnqgT2m6Xg6o+gAN6DnADWd
        5gAymuYAL5flACyU5AAqkuMAJ4/iACSM4QAiiuEAH4fgAB2F3wAbgt4AGIDeABZ+3QAUfNwGEnrchxB4
        23IOdtoADXTaAAty2QAKcdkACG/YAAdu2ABTvPAAULnvAE227gBLs+0ASLHtAEWu7ABCq+s5P6jq/zyl
        6bo6ougbN5/nADSc5gAxmeUALpflACyU5AApkeMAJo7iACSM4QAhieAAH4fgAByE3wAagt4AGIDdIRZ9
        3ckUe9z/EnnbHhB32wAOddoADHTaAAty2QAJcdkACG/YAFW+8QBSu/AAULnvAE227gBKs+0AR7DsAESt
        6wBBquvhP6fq/zyk6eo4oehMNp/nADOc5gAxmeUALpbkACuT4wAokeMAJo7iACOL4QAhieAAHobfAByE
        31cagd7zF3/d/xV93ckTe9wAEXnbAA932wAOddoADHPaAApy2QAJcNkAV8DxAFS+8QBSu/AAT7jvAEy1
        7gBJsu0AR6/sAESs65NBqur/Pafp/zqj6f83oOiRL5noBzOb5gAwmOUALZXkACuT4wAokOIAJY3iACCI
        4w0fh+CgHoXf/xuD3/8Zgd7/F3/deBV83AATetwAEXjbAA922wANddoADHPaAApx2QBZw/IAV8DxAFS9
        8ABRuu8ATrfvAEy07gBJsu0ARq/sPEKs6/9juu//OaTp/zeh6P82nufRMZroKgN08AEvmOUALZXkAAJo
        9QEljeMyI4vi2SCH4v8lieP/NZPk/xuD3v8ZgN4hFn7dABR83AASetwAEHjbAA922gANdNoAC3PZAFvF
        8wBZwvIAVr/xAFO88ABRuu8ATrfuAEu07gA3q+oEQ63s6j2p6/+l2/j/UK/t/zOe6f80nuf0MpvmYwNz
        8QIDb/ICKpLlciaO5PkiieX/R5zs/5PI9v8dhOL/HITg0xqC3gAYgN0AFn7dABR73AASedwAEHfbAA52
        2gANdNoAXcfzAFvE8wBYwfIAVb/xAFO88ABQue8ATbbuAAae4QFEr+yYP6vr/3PD8f+T0ff/VLDv/y6b
        6f8xm+j/L5nnsS2W5rkpkub/Iovn/06f8P+Xx/z/W6fv/x6G4v8ehOF7HITfABqC3gAYf90AFn3dABN7
        3AASedsAEHfbAA512gBfyfQAXcbzAFrD8gBYwfEAVb7xAFK78ABPuO8ATbXuAEey7UpCruv/UrXt/3jG
        8/9ou/P/XLPw/zGb6/8plen/J5Ho/zCU6/9cqPT/aav5/323+v84k+v/IYji/x+F4i8eht8AHIPfABmB
        3gAXf90AFX3dABN73AARedsAD3fbAGHL9QBfyPQAXMbzAFrD8gBXwPEAVL3wAFG78ABPuO8AMK3oBUWx
        7O43qur/asLw/0at7v9Dqe//Ua3x/0un8f9MpPL/UKT1/0GX9f9ImPf/ZKr2/yGI5v8ji+PUAmD3ASCI
        4AAehd8AG4PeABmB3gAXft0AFXzcABN63AAReNsAY831AGHK9ABeyPQAXMXzAFnC8gBWwPEAVL3wAFG6
        7wAGpd4BR7Ptpjyt6/9Wuu7/PKzr/yCa6v8gluz/JZXu/yWQ8P8fifD/H4by/0CW9f9InfH/JIzm/yWN
        44ckjOEAIorhAB+H4AAdhd8AG4LeABiA3gAWft0AFHzcABJ63ABlz/YAY8z1AGDK9ABex/MAW8TzAFjC
        8gBWv/EAU7zwAAap3QFFtOxRP7Hr/0Sz6/86rur/FJjo/wuP6f8Kiur/CoXs/wqB7f8Ug+//P5f0/zGS
        7f8mj+b/JIzlMyaO4gAkjOEAIYngAB+H4AAdhN8AGoLeABiA3QAWfd0AFHvcAGfR9gBlzvYAYsz1AGDJ
        9ABdx/MAWsTyAFjB8gBVvvEARbntEkq47bA+suv/U73s/zOu6P8QmuX/BpDm/waL6P8Fhur/BoPr/xGE
        7v84l/P/Rp/w/yaP5/8okOSYIormCyaO4gAji+EAIYngAB6G3wAchN8AGoHeABh/3QAVfd0AadP3AGbQ
        9gBkzvUAYsv1AF/J9ABdxvMAB7fYAVLA7zxQvfDgRrnt/z626v9Wwur/Jqvl/wyc5P8GleT/BZDm/wSL
        6P8Fhur/DIXt/ymR8P9Up/T/Iozp/yeQ5v8pkeTUJY3jKgJk9gEji+EAIIjgAB6G3wAcg98AGYHeABd/
        3QBr1PcAaNL3AGbQ9gBkzfUAYcv0AAe91gFZxfJ7VMLw+Um+7f9VxOv/YMvq/za55f8WqOH/Cp/h/waZ
        4/8FlOX/BY/m/wWK6P8Ih+r/F4ru/zqa8v9crPT/P5zt/yeP5v8okOT0Jo3jYgJk9gEiiuEAIIjgAB2F
        3wAbg94AGYDeAGzW+ABq1PcAaNH3AGXP9gBfzPMWX8rzu1nG8v9Nw+7/YM3s/2rU6v9Bw+T/Jbbh/xas
        4P8NpeH/CZ7h/waY4/8Gk+X/CI/n/wyN6v8Vjez/JpLv/0Of8/9stPb/TqTv/yaO5v8nkOT/Jo7iqSGJ
        4w0iiuAAH4fgAB2F3wAbgt4Abtj5AGzW+ABq0/cAZ9H2RWTP9udfzPT/Z87y/5Hh8v+I4O7/ZdTo/1HK
        5v9Ew+X/N7zk/ySy4v8TpuL/Cp7j/wqZ5P8Umef/Jp3q/zej7v9DpfD/UKny/2ez9f+Kxfn/e730/zOW
        5/8okOT/Jo7i3iSM4TMhieAAH4fgAByE3wBv2fkAbdf4A2vV+IRp0/f/ZtD1/3rW9v9x0/P/Zc/w/1jL
        7P9Qx+v/TMTq/0fB6f9PxOn/Vcbp/y205P8Wp+L/FqPk/zKr6f9Stu7/Sq7t/zqj6/87oez/PaDs/0Cg
        7P9Go+v/S6bq/06m6f8okOP/Jo7i+SOL4XUhiOAAHobfAHHb+h5v2fnGbdf4/2vV+P9o0vf/ZND1/1/M
        8/9ayvL/Vsfx/1LF8P9Qwu//S77u/0O66/9Bu+n/U8Xp/yuz5P8usOX/VL3s/zKn6f81pOn/NqLp/zSf
        6P8ynej/MJvo/y+Y5/8ulub/LJTk/yqS4/8okOL/JY3i/yOK4bcgiOAVc9z6JHHb+TNv2Pkzbdb4M2jU
        9jRk0fY1Yc70NVzM8zZZyfE3VsfxN1PE8DhNwe45Tr/vwkO66/9fyuv/RsDn/0q/6f9Zv+3/Oarq/zyq
        6qs4pek5N6PpODWg6Dcznec3MZvnNi+Y5jUuluU0K5TkNCqS4zMnj+IzJY3hMyKK4SF03voActz6AHDa
        +QBu2PkAbNb4AGrU9wBo0fcAZc/2AGPM9QBgyvQAXsfzAAe61wFUwfFqTb7u/1fF7P9mzuv/as3s/1G7
        6/9Br+z/Qa3rTAWV5AE/qOoAPaXpADqi6AA3n+cANJzmADGa5QAvl+UALJTkACmR4wAnj+IAJIzhAHXf
        +wB03voActz6AHDa+QBu2PgAbNX4AGnT9wBn0fYAZc72AGLM9QBgyfQAXcfzAFLD7xRTwPD8RLzs/4nc
        8P+C1vD/P7Pr/0ay7O4tqegFRK3rAEKq6wA/p+oAPKTpADmi6AA2n+cANJzmADGZ5QAuluQAK5PkACmR
        4wAmjuIAd+H7AHXf+wBz3foAcdv6AG/Z+QBt1/gAa9X4AGnT9wBn0PYAZM71AGLL9QBfyfQAB7zWAVbD
        8bxNwO7/i9vy/3/T8f9Ht+3/SbTtogai4AFHsOwARK3rAEGq6gA+p+kAO6TpADih6AA2nucAM5vmADCY
        5QAtluQAK5PjACiQ4gB44vwAduD7AHXf+wBz3foAcdv5AG/Z+QBt1/gAa9T4AGjS9wBm0PYAZM31AGHL
        9QBfyPQAWsXya1XC8f940PL/ccvy/0657/9Mt+5NTLXuAEmy7QBGr+wAQ6zrAECp6gA+pukAO6PoADig
        5wA1necAMpvmADCY5QAtleQAKpLjAHnj/AB44vwAduD7AHTe+wBy3PoAcNr5AG7Y+QBs1vgAatT3AGjS
        9wBmz/YAY831AGHK9ABax/ITWsXz/FfC8f9Uv/D/Ur3w8Em57QpOt+4AS7TuAEix7QBFruwAQ6vrAECo
        6gA9pukAOqPoADeg5wA0neYAMprmAC+X5QAslOQAeuT8AHnj/AB34fsAduD7AHTe+gBy3PoAcNr5AG7Y
        +QBs1vgAatP3AGfR9gBlz/YAY8z1AGDK9ABex/O9W8Tz/1jC8v9Wv/GlU7zwAFC57wBNtu4ASrPtAEix
        7ABFruwAQqvrAD+o6gA8pekAOaLoADef5wA0nOYAMZnlAC6X5AB75f0AeuT8AHji/AB34fsAdd/7AHPd
        +gBy2/oAcNn5AG7X+ABr1fgAadP3AGfR9gBkzvYAYsz1AF/J9GldxvP/WsTy/1jB8lRVvvEAUrvwAE+5
        7wBNtu4ASrPtAEew7ABEresAQarqAD+n6gA8pOkAOaHoADae5wAznOYAMJnlAHzm/QB75f0AeeT8AHji
        /AB24fsAdd/7AHPd+gBx2/oAb9n5AG3X+ABr1fgAadL3AGbQ9gBkzvUAYcv1FV/I9PxcxvP2WsPyCVfA
        8QBUvvAAUrvwAE+47wBMte4ASbLtAEav7ABErOsAQanqAD6m6QA7pOgAOKHoADWe5wAzm+YAfOb9AHzm
        /QB75f0AeeP8AHji/AB24PsAdN77AHPd+gBx2/kAb9n5AG3W+ABq1PcAaNL3AGbP9gBjzfUAYcr0w17I
        9KtcxfMAWcLyAFbA8QBUvfAAUbrvAE637wBLtO4ASbHtAEav7ABDrOsAQKnqAD2m6QA6o+gAOKDnADWd
        5wB85v0AfOb9AHzm/QB65PwAeeP8AHfh/AB24PsAdN76AHLc+gBw2vkAbtj5AGzW+ABq1PcAaNH3AGXP
        9gBjzPVpYMr0Wl7H8wBbxfMAWcLyAFa/8QBTvPAAULrvAE637gBLtO0ASLHtAEWu7ABCq+sAQKjqAD2l
        6QA6ougAN5/nAHzm/QB85v0AfOb9AHvl/QB65PwAeeP8AHfh+wB13/sAdN76AHLc+gBw2vkAbtj5AGzV
        +ABp0/cAZ9H2AGXO9htizPUPYMn0AF3H8wBbxPIAWMHyAFW/8QBTvPAAULnvAE227gBKs+0AR7DsAEWt
        6wBCqusAP6fqADyl6QA5ougA//////3//7/8//4//D/8P/4f+H/+B+B//gGAf/4AAP/+AAD//wAA//8A
        AP//AAH//wAB//8AAP/8AAA/+AAAH/AAAA/gAAAHgAAAAwAAAAAAAAAA/+AH///wD///8A////gf///4
        H////D////w////8P////n////5////+f/8=
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>130, 17</value>
  </metadata>
</root>